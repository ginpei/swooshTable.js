'use strict';

(function ($, _, Backbone) {
	var $list = $('.js-list');
	var data = JSON.parse($('#json-items').prop('text'));
	var templateRow = _.template($('#template-row').prop('text'));

	// ----------------------------------------------------------------

	var Item = Backbone.Model.extend({
		defaults: {
			title: null,
			subtitle: null
		}
	});

	var ItemCollection = Backbone.Collection.extend({
		model: Item
	});

	var ItemView = Backbone.View.extend({
		_rowButtons: [{ key: 'edit', label: 'Edit' }, { key: 'delete', label: 'Delete' }],

		initialize: function initialize(options) {
			this.listenTo(this.model, 'change:title', this.model_onchange_title);
		},

		render: function render() {
			var $el = $(templateRow(this.model.toJSON()));
			this.setElement($el);
			this.$title = this.$('.ui-swooshTable-cell-title');
			return this;
		},

		setElement: function setElement() {
			var rv = this.constructor.__super__.setElement.apply(this, arguments);

			var swoosh = new UISwipe({ el: this.el, buttons: this._rowButtons });
			swoosh.on('clickbutton', this.row_onclick.bind(this));
			this.swoosh = swoosh;

			return rv;
		},

		updateTitle: function updateTitle() {
			this.$title.text(this.model.get('title'));
		},

		restoreRowPosition: function restoreRowPosition() {
			this.swoosh.restore();
		},

		edit: function edit() {
			var title = this.model.get('title');
			var newTitle = window.prompt('Input new title.', title);
			if (newTitle) {
				this.model.set('title', newTitle);
			}
			this.restoreRowPosition();
		},

		delete: function _delete() {
			if (window.confirm('Are you sure to DELETE?')) {
				this.trigger('click_remove', this, this.model);
			} else {
				this.restoreRowPosition();
			}
		},

		doDelete: function doDelete() {
			var swoosh = this.swoosh;
			this.restoreRowPosition();
			swoosh.$el.slideUp(function () {
				swoosh.destroy();
				this.remove();
			}.bind(this));
		},

		model_onchange_title: function model_onchange_title(model, title, options) {
			this.updateTitle();
		},

		row_onclick: function row_onclick(event, data) {
			var key = data.key;
			if (key === 'edit') {
				this.edit();
			} else if (key === 'delete') {
				this.delete();
			}
		}
	});

	// ----------------------------------------------------------------

	var rowCount = data.length;
	var itemViews = {};
	var items = new ItemCollection();

	items.on('add', function (item, options) {
		var view = new ItemView({ model: item });
		view.render();
		itemViews[item.cid] = view;
		$list.append(view.$el);

		view.on('click_remove', function (view, item, options) {
			this.remove(item);
		}.bind(this));

		return view;
	});
	items.on('remove', function (item, items, options) {
		var view = itemViews[item.cid];
		view.doDelete();
	});

	$('.js-basicExample-add').on('click', function (event) {
		items.add({
			title: 'Fox ' + ++rowCount,
			subtitle: 'The quick brown fox jumps over the lazy dog'
		});
	});

	items.set(data);
})(window.$, window._, window.Backbone);
//# sourceMappingURL=data:application/json;base64,
